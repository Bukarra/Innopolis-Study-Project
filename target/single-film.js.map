{"version":3,"sources":["../js/single-film.js"],"names":["searchParams","URLSearchParams","location","search","likes","document","getElementById","stars","querySelectorAll","filmId","get","fetchKinopoiskFilmData","filmDetailsRequest","answer","json","filmInfo","header","description","querySelector","posterImage","premiereYear","textContent","nameRu","src","posterUrl","year","fetchFilmMeta","fetch","body","views","ratingNumber","rating","ratings","reduce","a","b","parseInt","length","intRating","Math","round","isNaN","floor","i","star","classList","add","likeIcon","addEventListener","contains","likesCount","innerText","method","headers","JSON","stringify","dataset","value"],"mappings":"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","sourcesContent":["const searchParams = new URLSearchParams(location.search);\r\nconst likes = document.getElementById('sf-likes');\r\nconst stars = document.querySelectorAll('.rating-star');\r\n\r\nconst filmId = searchParams.get('id');\r\n\r\nconst fetchKinopoiskFilmData = async () => {\r\n    const answer = await filmDetailsRequest(filmId);\r\n    const filmInfo = await answer.json();\r\n\r\n    const header = document.getElementById('sf-header');\r\n    const description = document.querySelector('#sf-description');\r\n    const posterImage = document.querySelector('#sf-poster');\r\n    const premiereYear = document.getElementById('sf-premiere');\r\n\r\n    header.textContent = filmInfo.nameRu;\r\n    description.textContent = filmInfo.description;\r\n    posterImage.src = filmInfo.posterUrl;\r\n    premiereYear.textContent = filmInfo.year;\r\n}\r\n\r\nconst fetchFilmMeta = async () => {\r\n    const answer = await fetch (`https://inno-js.ru/multystub/stc-21-03/film/${filmId}`);\r\n    const { body } = await answer.json();\r\n\r\n    const views = document.getElementById('sf-views');\r\n    const ratingNumber = document.getElementById('sf-rating-number');\r\n\r\n    views.textContent = `${body.views} Views`;\r\n    likes.textContent = `${body.likes} Likes`;\r\n    const rating = body.ratings.reduce((a, b) => parseInt(a) + parseInt(b), 0) / body.ratings.length;\r\n    const intRating = Math.round(rating);\r\n    if (isNaN(intRating)) {\r\n        ratingNumber.textContent = '0.0';\r\n    } else {\r\n        ratingNumber.textContent = Math.floor(rating * 10) / 10;\r\n    }\r\n\r\n    for (let i = 0; i < stars.length; i++) {      \r\n        if(i >= intRating) break;\r\n\r\n        const star = stars[i];\r\n        star.classList.add('star_selected');\r\n    }\r\n}\r\n\r\nconst likeIcon = document.querySelector('.like-icon');\r\nlikeIcon.addEventListener('click', () => {\r\n    if(!likeIcon.classList.contains('like-icon_liked')) {\r\n        const likesCount = parseInt(likes.textContent, 10) + 1;\r\n\r\n        likes.innerText = `${likesCount} Likes`;\r\n        likeIcon.classList.add('like-icon_liked');\r\n\r\n        fetch(\r\n            `https://inno-js.ru/multystub/stc-21-03/film/${filmId}/like`,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            }\r\n        )\r\n    }\r\n});\r\n\r\nfor (const star of stars) {\r\n    star.addEventListener('click', async () => {\r\n\r\n        await fetch(`https://inno-js.ru/multystub/stc-21-03/film/${filmId}/rating`,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ rating: +star.dataset.value })\r\n            });\r\n\r\n        fetchFilmMeta();\r\n    })\r\n}\r\n\r\nfetchKinopoiskFilmData();\r\nfetchFilmMeta();\r\n"],"file":"single-film.js"}