{"version":3,"sources":["../js/blocks-films.js"],"names":["blockFilmsWrapper","document","getElementById","innerHTML","kinopoiskapiunofficialRequest","url","fetch","headers","cors","topfilmsRequest","filmDetailsRequest","id","renderFilmBlock","posterUrl","filmName","wrapper","createElement","classList","add","img","src","alt","shadow","descWrapper","title","textContent","desc","append","fetchBlockFilms","result","json","films","requests","filmBlocksMap","Map","forEach","film","posterUrlPreview","nameRu","filmLayout","set","filmId","push","Promise","resolve","reject","detailResult","detailsData","description","data","all","elements","values","slice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,iBAAiB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,CAA1B;AACAF,iBAAiB,CAACG,SAAlB,GAA8B,EAA9B;;AAEA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,GAAD,EAAS;AAC3C,SAAOC,KAAK,CAAED,GAAF,EAAO;AACfE,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,mBAAa;AAFR,KADM;AAKfC,IAAAA,IAAI,EAAE;AALS,GAAP,CAAZ;AAOH,CARD;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,SAAOL,6BAA6B,CAAC,oFAAD,CAApC;AACH,CAFD;;AAGA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,EAAD,EAAQ;AAC/B,SAAOP,6BAA6B,8DAAuDO,EAAvD,EAApC;AACH,CAFD;;AAIA,SAASC,eAAT,CAA0BC,SAA1B,EAAqCC,QAArC,EAA+C;AAC3C,MAAMC,OAAO,GAAGd,QAAQ,CAACe,aAAT,CAAuB,KAAvB,CAAhB;AACID,EAAAA,OAAO,CAACE,SAAR,CAAkBC,GAAlB,CAAsB,gBAAtB;AACA,MAAMC,GAAG,GAAGlB,QAAQ,CAACe,aAAT,CAAuB,KAAvB,CAAZ;AACAG,EAAAA,GAAG,CAACF,SAAJ,CAAcC,GAAd,CAAkB,cAAlB;AACAC,EAAAA,GAAG,CAACC,GAAJ,GAAUP,SAAV;AACAM,EAAAA,GAAG,CAACE,GAAJ,GAAU,qBAAV;AAEA,MAAMC,MAAM,GAAGrB,QAAQ,CAACe,aAAT,CAAuB,KAAvB,CAAf;AACAM,EAAAA,MAAM,CAACL,SAAP,CAAiBC,GAAjB,CAAqB,iBAArB;AAEA,MAAMK,WAAW,GAAGtB,QAAQ,CAACe,aAAT,CAAuB,KAAvB,CAApB;AACAO,EAAAA,WAAW,CAACN,SAAZ,CAAsBC,GAAtB,CAA0B,sBAA1B;AAEA,MAAMM,KAAK,GAAGvB,QAAQ,CAACe,aAAT,CAAuB,GAAvB,CAAd;AACAQ,EAAAA,KAAK,CAACP,SAAN,CAAgBC,GAAhB,CAAoB,gBAApB;AACAM,EAAAA,KAAK,CAACC,WAAN,GAAoBX,QAApB;AAEA,MAAMY,IAAI,GAAGzB,QAAQ,CAACe,aAAT,CAAuB,GAAvB,CAAb;AACAU,EAAAA,IAAI,CAACT,SAAL,CAAeC,GAAf,CAAmB,gBAAnB,EAAqC,gBAArC;AAEAK,EAAAA,WAAW,CAACI,MAAZ,CAAmBH,KAAnB,EAA0BE,IAA1B;AACAX,EAAAA,OAAO,CAACY,MAAR,CAAeR,GAAf,EAAoBG,MAApB,EAA4BC,WAA5B;AAEA,SAAO,CAACR,OAAD,EAAUW,IAAV,CAAP;AACP;;AAED,IAAME,eAAe;AAAA,qEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCnB,eAAe,EADhB;;AAAA;AACdoB,YAAAA,MADc;AAAA;AAAA,mBAEIA,MAAM,CAACC,IAAP,EAFJ;;AAAA;AAAA;AAEZC,YAAAA,KAFY,sBAEZA,KAFY;AAIdC,YAAAA,QAJc,GAIH,EAJG;AAKdC,YAAAA,aALc,GAKE,IAAIC,GAAJ,EALF;AAOpBH,YAAAA,KAAK,CAACI,OAAN,CAAc,UAACC,IAAD,EAAU;AACpB,qCAA2BxB,eAAe,CAACwB,IAAI,CAACC,gBAAN,EAAwBD,IAAI,CAACE,MAA7B,CAA1C;AAAA;AAAA,kBAAOC,UAAP;AAAA,kBAAmBb,IAAnB;;AACAO,cAAAA,aAAa,CAACO,GAAd,CAAkBJ,IAAI,CAACK,MAAvB,EAA+BF,UAA/B;AAEAP,cAAAA,QAAQ,CAACU,IAAT,CAAc,IAAIC,OAAJ;AAAA,oFAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACKnC,kBAAkB,CAAC0B,IAAI,CAACK,MAAN,CADvB;;AAAA;AAChBK,0BAAAA,YADgB;AAAA;AAAA,iCAEIA,YAAY,CAAChB,IAAb,EAFJ;;AAAA;AAEhBiB,0BAAAA,WAFgB;AAIhBC,0BAAAA,WAJgB,GAIFD,WAAW,CAACE,IAAZ,CAAiBD,WAJf;;AAMtB,8BAAG,CAACA,WAAJ,EAAiB;AACjBf,4BAAAA,aAAa,UAAb,CAAqBG,IAAI,CAACK,MAA1B;AACC,2BAFD,MAEO;AACHf,4BAAAA,IAAI,CAACD,WAAL,GAAmBuB,WAAnB;AACH;;AAEDJ,0BAAAA,OAAO;;AAZe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ;;AAAA;AAAA;AAAA;AAAA,kBAAd;AAcH,aAlBD;AAPoB;AAAA,mBA2BdD,OAAO,CAACO,GAAR,CAAYlB,QAAZ,CA3Bc;;AAAA;AA6BpB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEMmB,YAAAA,QAvCc,GAuCH,mBAAIlB,aAAa,CAACmB,MAAd,EAAJ,EAA4BC,KAA5B,CAAkC,CAAlC,EAAqC,CAArC,CAvCG;AAyCpBrD,YAAAA,iBAAiB,CAAC2B,MAAlB,OAAA3B,iBAAiB,qBAAWmD,QAAX,EAAjB;;AAzCoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfvB,eAAe;AAAA;AAAA;AAAA,GAArB;;AA6CAA,eAAe","sourcesContent":["const blockFilmsWrapper = document.getElementById('block05-films-wrapper');\r\nblockFilmsWrapper.innerHTML = '';\r\n\r\nconst kinopoiskapiunofficialRequest = (url) => {\r\n    return fetch (url, {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'X-API-KEY': '5ba46513-d50f-4e8e-860e-e354b5ebbaa6',\r\n        },\r\n        cors: 'no-cors'\r\n    });\r\n}\r\n\r\nconst topfilmsRequest = () => {\r\n    return kinopoiskapiunofficialRequest('https://kinopoiskapiunofficial.tech/api/v2.2/films/top?type=TOP_AWAIT_FILMS&page=1')\r\n}\r\nconst filmDetailsRequest = (id) => {\r\n    return kinopoiskapiunofficialRequest(`https://kinopoiskapiunofficial.tech/api/v2.2/films/${id}`)\r\n}\r\n\r\nfunction renderFilmBlock (posterUrl, filmName) {\r\n    const wrapper = document.createElement('div');\r\n        wrapper.classList.add('block05__movie');\r\n        const img = document.createElement('img');\r\n        img.classList.add('block05__pic');\r\n        img.src = posterUrl;\r\n        img.alt = 'Изображение постера';\r\n\r\n        const shadow = document.createElement('div');\r\n        shadow.classList.add('block05__shadow');\r\n        \r\n        const descWrapper = document.createElement('div');\r\n        descWrapper.classList.add('block05__description');\r\n\r\n        const title = document.createElement('p');\r\n        title.classList.add('block05__text1');\r\n        title.textContent = filmName;\r\n        \r\n        const desc = document.createElement('p');\r\n        desc.classList.add('block05__text2', 'paragraph-font');\r\n\r\n        descWrapper.append(title, desc);\r\n        wrapper.append(img, shadow, descWrapper);\r\n\r\n        return [wrapper, desc];\r\n}\r\n\r\nconst fetchBlockFilms = async() => {\r\n    const result = await topfilmsRequest();\r\n    const { films } = await result.json();\r\n\r\n    const requests = [];\r\n    const filmBlocksMap = new Map();\r\n\r\n    films.forEach((film) => {\r\n        const [filmLayout, desc] = renderFilmBlock(film.posterUrlPreview, film.nameRu);\r\n        filmBlocksMap.set(film.filmId, filmLayout);\r\n\r\n        requests.push(new Promise(async (resolve, reject) => {\r\n            const detailResult = await filmDetailsRequest(film.filmId);\r\n            const detailsData = await detailResult.json();\r\n            \r\n            const description = detailsData.data.description;\r\n\r\n            if(!description) {\r\n            filmBlocksMap.delete(film.filmId)\r\n            } else {\r\n                desc.textContent = description;\r\n            }\r\n\r\n            resolve();\r\n        }));\r\n    })\r\n\r\n    await Promise.all(requests);\r\n\r\n    // let i = 0;\r\n    // for (const [, element] of filmBlocksMap) {\r\n    //     blockFilmsWrapper.append(element)\r\n    //     i++;\r\n\r\n    //     if (i >= 9) {\r\n    //         break;\r\n    //     }\r\n    // }\r\n\r\n    const elements = [...filmBlocksMap.values()].slice(0, 9);\r\n\r\n    blockFilmsWrapper.append(...elements);\r\n\r\n}\r\n\r\nfetchBlockFilms();"],"file":"blocks-films.js"}